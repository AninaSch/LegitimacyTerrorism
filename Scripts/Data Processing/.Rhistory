x0 <- c(-2, seq(0,1,0.01), 2, -2)
y0 <- c(0, dnorm(seq(-2,2,0.01)), 0, 0)
polygon(x0, y0, col = "blue")
polygon(x0, y0, col = "blue")
integrate(dnorm, -2, 2)
pnorm(2) - pnorm(-2)
pnorm(2, 2, 1) - pnorm(-2, 2, 1)
install.packages("RSiena", repos="http://R-Forge.R-project.org")
install.packages("RSiena")
install.packages("RSiena", repos="http://R-Forge.R-project.org", (options(download.file.method = NULL)))
# if you don't have the RSiena package installed
# install it - from R-Forge! (the version at CRAN is older)
install.packages("RSiena", repos="http://R-Forge.R-project.org", options(download.file.method = NULL))
# if you don't have the RSiena package installed
# install it - from R-Forge! (the version at CRAN is older)
install.packages("RSiena", repos="http://R-Forge.R-project.org"), (options(download.file.method = NULL)))
?install.packages
install.packages("RSiena", repos = getOption("repos")[["http://R-Forge.R-project.org"]])
install.packages("RSiena", repos = getOption("repos")[["http://R-Forge.R-project.org"]]))
install.packages("RSiena", repos = getOption("http://R-Forge.R-project.org"))
install.packages("RSiena", options(download.file.method = NULL))
install.packages("RSiena")
# loading necessary packages
library(RSiena)
sienaAlgorithmCreate
install.packages("tm")
install.packages("reshape2")
install.packages("tidyverse")
library(tidyverse)
library(rio)
rio::import("/Users/schwarze/Documents/HARVARD/TechTogether")
rio::import(".../Users/schwarze/Documents/HARVARD/TechTogether")
rio::import("../Users/schwarze/Documents/HARVARD/TechTogether")
rio::import("../Users/schwarze/Documents/HARVARD/TechTogether/FY2019_4050_FMRs_rev2")
rio::import("../Users/schwarze/Documents/HARVARD/TechTogether/FY2019_4050_FMRs_rev2.xlsx")
rio::import("../TechTogether/FY2019_4050_FMRs_rev2.xlsx")
View(politeness)
View(fit)
View(first_fit)
rio::import("../TechTogether/FY2019_4050_FMRs_rev2.xlsx")
fairrent <- rio::import("../TechTogether/FY2019_4050_FMRs_rev2.xlsx")
View(fairrent)
setwd("~/Documents/GitHub/LegitimacyTerrorism/Scripts/Data Processing/Functions to Tidy Data")
WVS <- rio::import("../../../Data/Original Data/WorldValueSurvey/F00008390-WVS_Longitudinal_1981_2016_r_v20180912.rds") # for debugging
# glimpse(WVS)
print("importing done")
# as the data is encoded, we need to decode the variables that interest us.
# e.g. country is a number and should be a name etc.
# 1. COUNTRY - S003
# https://cran.r-project.org/web/packages/sjlabelled/vignettes/labelleddata.html
WVS <- WVS %>% mutate(S003_country = sjlabelled::as_label(WVS$S003))
WVS_tidy <- WVS %>%
select(
country = S003_country,
year = S020,
wave = S002,
trust_others	=	A165,	#	Most people can be trusted
# general_trust_citizen	=	G007_01,	#	Trust: Other people in country
# general_trust_people	=	G007_64,	#	Trust: People in general
importance_politics	=	A004,	#	Important in life: Politics
interest_politics1	=	E023,	#	Interest in politics
# interest_politics2	=	E024,	#	Interest in politics (ii)
# follow_politics	=	E150	#	How often follows politics in the news
) %>%
filter(
year >= 1970
) %>%
arrange(country, year) %>%
mutate(country = as.factor(country))
setwd("~/Documents/GitHub/LegitimacyTerrorism/Scripts/Data Processing/Functions to Tidy Data")
WVS <- rio::import("../../../Data/Original Data/WorldValueSurvey/F00008390-WVS_Longitudinal_1981_2016_r_v20180912.rds") # for debugging
# as the data is encoded, we need to decode the variables that interest us.
# e.g. country is a number and should be a name etc.
# 1. COUNTRY - S003
# https://cran.r-project.org/web/packages/sjlabelled/vignettes/labelleddata.html
WVS <- WVS %>% mutate(S003_country = sjlabelled::as_label(WVS$S003))
library(sjlabelled) # to get labels of labelled data
library(Hmisc) # the data labels (variable names)
library(dbplyr)
library(tidyverse)
# as the data is encoded, we need to decode the variables that interest us.
# e.g. country is a number and should be a name etc.
# 1. COUNTRY - S003
# https://cran.r-project.org/web/packages/sjlabelled/vignettes/labelleddata.html
WVS <- WVS %>% mutate(S003_country = sjlabelled::as_label(WVS$S003))
WVS_tidy <- WVS %>%
select(
country = S003_country,
year = S020,
wave = S002,
trust_others	=	A165,	#	Most people can be trusted
# general_trust_citizen	=	G007_01,	#	Trust: Other people in country
# general_trust_people	=	G007_64,	#	Trust: People in general
importance_politics	=	A004,	#	Important in life: Politics
interest_politics1	=	E023,	#	Interest in politics
# interest_politics2	=	E024,	#	Interest in politics (ii)
# follow_politics	=	E150	#	How often follows politics in the news
) %>%
filter(
year >= 1970
) %>%
arrange(country, year) %>%
mutate(country = as.factor(country))
WVS_tidy_wave6 <- WVS_tidy %>%
filter(wave == 4, 5, 6) %>%
group_by(country) %>%
summarise(
mean_trust_others = mean(trust_others, na.rm=TRUE),
mean_importance_politics = mean(importance_politics, na.rm=TRUE),
mean_interest_politics1 = mean(interest_politics1, na.rm=TRUE),
std_trust_others = sd(trust_others, na.rm=TRUE),
std_importance_politics = sd(importance_politics, na.rm=TRUE),
std_interest_politics1 = sd(interest_politics1, na.rm=TRUE)
) %>%
arrange()
View(WVS_tidy_wave6)
WVS_tidy_wave456 <- WVS_tidy %>%
filter(wave == 4, 5, 6) %>%
group_by(country) %>%
summarise(
mean_trust_others = mean(trust_others, na.rm=TRUE),
mean_importance_politics = mean(importance_politics, na.rm=TRUE),
mean_interest_politics1 = mean(interest_politics1, na.rm=TRUE),
std_trust_others = sd(trust_others, na.rm=TRUE),
std_importance_politics = sd(importance_politics, na.rm=TRUE),
std_interest_politics1 = sd(interest_politics1, na.rm=TRUE),
wave = wave
) %>%
arrange()
WVS_tidy_wave456 <- WVS_tidy %>%
filter(wave == 4, 5, 6) %>%
group_by(country, country) %>%
summarise(
mean_trust_others = mean(trust_others, na.rm=TRUE),
mean_importance_politics = mean(importance_politics, na.rm=TRUE),
mean_interest_politics1 = mean(interest_politics1, na.rm=TRUE),
std_trust_others = sd(trust_others, na.rm=TRUE),
std_importance_politics = sd(importance_politics, na.rm=TRUE),
std_interest_politics1 = sd(interest_politics1, na.rm=TRUE),
) %>%
arrange()
WVS_tidy_wave456 <- WVS_tidy %>%
filter(wave == 4, 5, 6) %>%
group_by(country, wave) %>%
summarise(
mean_trust_others = mean(trust_others, na.rm=TRUE),
mean_importance_politics = mean(importance_politics, na.rm=TRUE),
mean_interest_politics1 = mean(interest_politics1, na.rm=TRUE),
std_trust_others = sd(trust_others, na.rm=TRUE),
std_importance_politics = sd(importance_politics, na.rm=TRUE),
std_interest_politics1 = sd(interest_politics1, na.rm=TRUE),
) %>%
arrange()
View(WVS_tidy_wave456)
WVS_tidy_wave456 <- WVS_tidy %>%
filter(wave >= 4) %>%
group_by(country, wave) %>%
summarise(
mean_trust_others = mean(trust_others, na.rm=TRUE),
mean_importance_politics = mean(importance_politics, na.rm=TRUE),
mean_interest_politics1 = mean(interest_politics1, na.rm=TRUE),
std_trust_others = sd(trust_others, na.rm=TRUE),
std_importance_politics = sd(importance_politics, na.rm=TRUE),
std_interest_politics1 = sd(interest_politics1, na.rm=TRUE),
) %>%
arrange()
View(WVS_tidy_wave456)
setwd("~/Documents/GitHub/LegitimacyTerrorism/Scripts/Data Processing/Functions to Tidy Data")
library(sjlabelled) # to get labels of labelled data
library(Hmisc) # the data labels (variable names)
library(dbplyr)
library(tidyverse)
WVS <- rio::import("../../../Data/Original Data/WorldValueSurvey/F00008390-WVS_Longitudinal_1981_2016_r_v20180912.rds") # for debugging
# as the data is encoded, we need to decode the variables that interest us.
# e.g. country is a number and should be a name etc.
# 1. COUNTRY - S003
# https://cran.r-project.org/web/packages/sjlabelled/vignettes/labelleddata.html
WVS <- WVS %>% mutate(S003_country = sjlabelled::as_label(WVS$S003))
WVS_tidy <- WVS %>%
select(
country = S003_country,
year = S020,
wave = S002,
trust_others	=	A165,	#	Most people can be trusted
# general_trust_citizen	=	G007_01,	#	Trust: Other people in country
# general_trust_people	=	G007_64,	#	Trust: People in general
importance_politics	=	A004,	#	Important in life: Politics
interest_politics1	=	E023,	#	Interest in politics
# interest_politics2	=	E024,	#	Interest in politics (ii)
# follow_politics	=	E150	#	How often follows politics in the news
) %>%
filter(
year >= 1970
) %>%
arrange(country, year) %>%
mutate(country = as.factor(country))
WVS_tidy_wave456 <- WVS_tidy %>%
filter(wave >= 4) %>%
group_by(country) %>%
summarise(
mean_trust_others = mean(trust_others, na.rm=TRUE),
mean_importance_politics = mean(importance_politics, na.rm=TRUE),
mean_interest_politics1 = mean(interest_politics1, na.rm=TRUE),
std_trust_others = sd(trust_others, na.rm=TRUE),
std_importance_politics = sd(importance_politics, na.rm=TRUE),
std_interest_politics1 = sd(interest_politics1, na.rm=TRUE)
) %>%
arrange()
saveRDS(WVS_tidy_wave456, file = path_savetidy)
# Aim of this function:
#   read the WVS data, select the variables of interest, add new computed variables if needed, and,
#   save the output as WVS_tidy.rds.
# note: this function is called from tidy_datasets.R
# WVS waves
# wave 1: 1981-1984
# wave 2: 1990-1994
# wave 3: 1995-1998
# wave 4: 1999-2004
# wave 5: 2005-2008
# wave 6: 2010-2012
# > table(WVS_tidy$year, WVS_tidy$wave)
# 1     2     3     4     5     6
# 1981  8551     0     0     0     0     0
# 1982  4030     0     0     0     0     0
# 1984  1005     0     0     0     0     0
# 1989     0  2338     0     0     0     0
# 1990     0 18512     0     0     0     0
# 1991     0  3708     0     0     0     0
# 1994     0     0   780     0     0     0
# 1995     0     0 16681     0     0     0
# 1996     0     0 32321     0     0     0
# 1997     0     0 14167     0     0     0
# 1998     0     0 12615     0     0     0
# 1999     0     0  1254  2480     0     0
# 2000     0     0     0 12991     0     0
# 2001     0     0     0 32387     0     0
# 2002     0     0     0  6302     0     0
# 2003     0     0     0  2545     0     0
# 2004     0     0     0  2325  1954     0
# 2005     0     0     0     0 17437     0
# 2006     0     0     0     0 36513     0
# 2007     0     0     0     0 22513     0
# 2008     0     0     0     0  3051     0
# 2009     0     0     0     0  2507     0
# 2010     0     0     0     0     0  5702
# 2011     0     0     0     0     0 23407
# 2012     0     0     0     0     0 32024
# 2013     0     0     0     0     0 15914
# 2014     0     0     0     0     0 10522
# 2016     0     0     0     0     0  1996
#
# Theory: citizenship's trait (Weatherford 1992)
# political interest and involvement
# (psychological feeling that political involvement is worth the opportunity cost of trading off time and commitment from other occupants)
# belief about interpersonal and social relations relevant ot collective action (expectations about the intentions and turstworthiness of other people)
tidy_WVS <- function(path_loadoriginal, path_savetidy){
print("This function has to be cleaned")
library(sjlabelled) # to get labels of labelled data
library(Hmisc) # the data labels (variable names)
library(dbplyr)
library(tidyverse)
# read WVS Data
print("importing WVS data... (1min) ")
WVS <- rio::import(path_loadoriginal)
# WVS <- rio::import("../../../Data/Original Data/WorldValueSurvey/F00008390-WVS_Longitudinal_1981_2016_r_v20180912.rds") # for debugging
# glimpse(WVS)
print("importing done")
# wws_labels <- label(WVS)
# wws_labels[[1]] to access only the label.
# as the data is encoded, we need to decode the variables that interest us.
# e.g. country is a number and should be a name etc.
# 1. COUNTRY - S003
# https://cran.r-project.org/web/packages/sjlabelled/vignettes/labelleddata.html
WVS <- WVS %>% mutate(S003_country = sjlabelled::as_label(WVS$S003))
WVS_tidy <- WVS %>%
select(
country = S003_country,
year = S020,
wave = S002,
trust_others	=	A165,	#	Most people can be trusted
# general_trust_citizen	=	G007_01,	#	Trust: Other people in country
# general_trust_people	=	G007_64,	#	Trust: People in general
importance_politics	=	A004,	#	Important in life: Politics
interest_politics1	=	E023,	#	Interest in politics
# interest_politics2	=	E024,	#	Interest in politics (ii)
# follow_politics	=	E150	#	How often follows politics in the news
) %>%
filter(
year >= 1970
) %>%
arrange(country, year) %>%
mutate(country = as.factor(country))
# table(WVS_tidy$trust_others)
# table(WVS_tidy$importance_politics)
# table(WVS_tidy$interest_politics1)
#
print("tidying done")
table(WVS_tidy$country, WVS_tidy$year) %>% tail(100)
#
#
# fill in missing values
#
#
# consistency check
WVS_tidy_wave456 <- WVS_tidy %>%
filter(wave >= 4) %>%
group_by(country) %>%
summarise(
mean_trust_others = mean(trust_others, na.rm=TRUE),
mean_importance_politics = mean(importance_politics, na.rm=TRUE),
mean_interest_politics1 = mean(interest_politics1, na.rm=TRUE),
std_trust_others = sd(trust_others, na.rm=TRUE),
std_importance_politics = sd(importance_politics, na.rm=TRUE),
std_interest_politics1 = sd(interest_politics1, na.rm=TRUE)
) %>%
arrange()
print("tidying done")
saveRDS(WVS_tidy_wave456, file = path_savetidy)
# saveRDS(WVS_tidy_wave6, file = "../../../Data/Processed Data/WVS_tidy_wave6.rds")
print("processed WVS wave 6 data saved")
}
# Look up countries
# WVS_tidy$country %>% unique
# ----------------------------------------------------------------------------------------
# AGGREGATE VARIABLES OVER ALL YEARS AT COUNTRY LEVEL
WVS_tidy_aggregate <- WVS_tidy %>%
group_by(country, year) %>%
summarise(
mean_trust_others = mean(trust_others, na.rm=TRUE),
mean_importance_politics = mean(importance_politics, na.rm=TRUE),
mean_interest_politics1 = mean(interest_politics1, na.rm=TRUE)
) %>%
arrange(country, year)
# control:
# WVS_tidy %>% filter(country == "Albania", year == 1998) %>% .$trust_others %>% mean()
# WVS_tidy %>% filter(country == "Albania", year == 1998) %>% .$trust_others %>% median()
#
# PLOT
WVS_agg_subset = WVS_tidy_aggregate %>% filter(
country %in% c("Russia", "Poland", "Peru", "Nigeria", "Norway", "Mexico")
)
ggplot(data=WVS_agg_subset, aes(x=year, y=mean_trust_others, group=country)) +
geom_line() +
geom_point()  + theme_bw()
# Tidy All the Necessary Data.
# This "main" script reads all the separate "Scripts to Tidy Data/Data_tidy.R" scripts used to tidy the data.
# Working Directory has to be set to this file's location.
# This file take a few minutes to run
#       0. setup
library(rio) # to import and export data
library(tidyverse) # data wrangling etc.
# --- 1. tidy GTD:
source("Functions to Tidy Data/tidy_GTD.R")
path_loadoriginal = "../../Data/Original Data/GTD/globalterrorismdb_0718dist.xlsx" # path to original data
path_savetidy = "../../Data/Processed Data/GTD_tidy.rds"
tidy_GTD(path_loadoriginal, path_savetidy) # import original, clean, tidy, save in processed data
# no need to worry about the warnings of rio::import
# --- 2. tidy PolityIV:
source("Functions to Tidy Data/tidy_Polity4.R")
path_loadoriginal = "../../Data/Original Data/SystemicPeace/p4v2017.xls"
path_savetidy = "../../Data/Processed Data/polity_tidy.rds"
tidy_Polity4(path_loadoriginal, path_savetidy) # import original, clean, tidy, save in processed data
# --- 3. tidy WVS:
source("Functions to Tidy Data/tidy_WVS.R")
path_loadoriginal = "../../Data/Original Data/WorldValueSurvey/F00008390-WVS_Longitudinal_1981_2016_r_v20180912.rds"
path_savetidy = "../../Data/Processed Data/WVS_tidy_wave456.rds"
tidy_WVS(path_loadoriginal, path_savetidy) # import original, clean, tidy, save in processed data
# --- 4. tidy Penn:
source("Functions to Tidy Data/tidy_PENN.R")
path_loadoriginal = "../../Data/Original Data/PENNWorldTable/pwt91new.xlsx"
path_savetidy = "../../Data/Processed Data/PENN_tidy.rds"
tidy_PENN(path_loadoriginal, path_savetidy) # import original, clean, tidy, save in processed data
# --- 5. tidy WGI:
source("Functions to Tidy Data/tidy_WGI.R")
path_loadoriginal = "../../Data/Original Data/WorldBank/WorldGovIndex/" # path to folder only!
path_savetidy = "../../Data/Processed Data/WGI_tidy.rds"
tidy_WGI(path_loadoriginal, path_savetidy) # import original, clean, tidy, save in processed data
# --- 6. tidy PRIO:
source("Functions to Tidy Data/tidy_PRIO.R")
path_loadoriginal = "../../Data/Original Data/PRIO/ucdp-prio-acd-191.xlsx" # path to folder only!
path_savetidy = "../../Data/Processed Data/Prio_tidy.rds"
tidy_PRIO(path_loadoriginal, path_savetidy) # import original, clean, tidy, save in processed data
setwd("~/Documents/GitHub/LegitimacyTerrorism/Scripts/Data Processing")
# Tidy All the Necessary Data.
# This "main" script reads all the separate "Scripts to Tidy Data/Data_tidy.R" scripts used to tidy the data.
# Working Directory has to be set to this file's location.
# This file take a few minutes to run
#       0. setup
library(rio) # to import and export data
library(tidyverse) # data wrangling etc.
# --- 1. tidy GTD:
source("Functions to Tidy Data/tidy_GTD.R")
path_loadoriginal = "../../Data/Original Data/GTD/globalterrorismdb_0718dist.xlsx" # path to original data
path_savetidy = "../../Data/Processed Data/GTD_tidy.rds"
tidy_GTD(path_loadoriginal, path_savetidy) # import original, clean, tidy, save in processed data
# no need to worry about the warnings of rio::import
# --- 2. tidy PolityIV:
source("Functions to Tidy Data/tidy_Polity4.R")
path_loadoriginal = "../../Data/Original Data/SystemicPeace/p4v2017.xls"
path_savetidy = "../../Data/Processed Data/polity_tidy.rds"
tidy_Polity4(path_loadoriginal, path_savetidy) # import original, clean, tidy, save in processed data
# --- 3. tidy WVS:
source("Functions to Tidy Data/tidy_WVS.R")
path_loadoriginal = "../../Data/Original Data/WorldValueSurvey/F00008390-WVS_Longitudinal_1981_2016_r_v20180912.rds"
path_savetidy = "../../Data/Processed Data/WVS_tidy_wave456.rds"
tidy_WVS(path_loadoriginal, path_savetidy) # import original, clean, tidy, save in processed data
# --- 4. tidy Penn:
source("Functions to Tidy Data/tidy_PENN.R")
path_loadoriginal = "../../Data/Original Data/PENNWorldTable/pwt91new.xlsx"
path_savetidy = "../../Data/Processed Data/PENN_tidy.rds"
tidy_PENN(path_loadoriginal, path_savetidy) # import original, clean, tidy, save in processed data
# --- 5. tidy WGI:
source("Functions to Tidy Data/tidy_WGI.R")
path_loadoriginal = "../../Data/Original Data/WorldBank/WorldGovIndex/" # path to folder only!
path_savetidy = "../../Data/Processed Data/WGI_tidy.rds"
tidy_WGI(path_loadoriginal, path_savetidy) # import original, clean, tidy, save in processed data
# --- 6. tidy PRIO:
source("Functions to Tidy Data/tidy_PRIO.R")
path_loadoriginal = "../../Data/Original Data/PRIO/ucdp-prio-acd-191.xlsx" # path to folder only!
path_savetidy = "../../Data/Processed Data/Prio_tidy.rds"
tidy_PRIO(path_loadoriginal, path_savetidy) # import original, clean, tidy, save in processed data
setwd("~/Documents/GitHub/LegitimacyTerrorism/Scripts/Data Processing/Functions to Tidy Data")
library(sjlabelled) # to get labels of labelled data
library(Hmisc) # the data labels (variable names)
library(dbplyr)
library(tidyverse)
WVS <- rio::import("../../../Data/Original Data/WorldValueSurvey/F00008390-WVS_Longitudinal_1981_2016_r_v20180912.rds") # for debugging
# as the data is encoded, we need to decode the variables that interest us.
# e.g. country is a number and should be a name etc.
# 1. COUNTRY - S003
# https://cran.r-project.org/web/packages/sjlabelled/vignettes/labelleddata.html
WVS <- WVS %>% mutate(S003_country = sjlabelled::as_label(WVS$S003))
WVS_tidy <- WVS %>%
select(
country = S003_country,
year = S020,
wave = S002,
trust_others	=	A165,	#	Most people can be trusted
# general_trust_citizen	=	G007_01,	#	Trust: Other people in country
# general_trust_people	=	G007_64,	#	Trust: People in general
importance_politics	=	A004,	#	Important in life: Politics
interest_politics1	=	E023,	#	Interest in politics
# interest_politics2	=	E024,	#	Interest in politics (ii)
# follow_politics	=	E150	#	How often follows politics in the news
) %>%
filter(
year >= 1970
) %>%
arrange(country, year) %>%
mutate(country = as.factor(country))
WVS_tidy_wave456 <- WVS_tidy %>%
filter(wave >= 4) %>%
group_by(country) %>%
summarise(
mean_trust_others = mean(trust_others, na.rm=TRUE),
mean_importance_politics = mean(importance_politics, na.rm=TRUE),
mean_interest_politics1 = mean(interest_politics1, na.rm=TRUE),
std_trust_others = sd(trust_others, na.rm=TRUE),
std_importance_politics = sd(importance_politics, na.rm=TRUE),
std_interest_politics1 = sd(interest_politics1, na.rm=TRUE)
) %>%
arrange()
saveRDS(WVS_tidy_wave456, file = "../../../Data/Processed Data/WVS_tidy_wave456.rds")
setwd("~/Documents/GitHub/LegitimacyTerrorism/Scripts/Data Processing")
# This script merges the processed data together to create a dataset ready for PANEL ANALYSIS.
# --- 0. Setup
library(tidyverse)
# library(foreign)
source("Other functions/clean_countries.R") # function to clean country names
# --- 1. Load Processed Datasets
GTD <- readRDS("../../Data/Processed Data/GTD_tidy.rds")
polity <- readRDS("../../Data/Processed Data/polity_tidy.rds")
PENN <- readRDS("../../Data/Processed Data/PENN_tidy.rds")
PRIO <- readRDS("../../Data/Processed Data/Prio_tidy.rds")
WGI <- readRDS("../../Data/Processed Data/WGI_tidy.rds")
WVS <- readRDS("../../Data/Processed Data/WVS_tidy_wave6.rds")
# --- 2. Clean Countries Before Merging
path_to_country_dictionary = "../../Data/Processed Data/To Clean Countries/countries.csv"
GTD <- clean_countries(GTD, path_to_country_dictionary)
polity <- clean_countries(polity, path_to_country_dictionary)
PENN <- clean_countries(PENN, path_to_country_dictionary)
PRIO <- clean_countries(PRIO, path_to_country_dictionary)
WGI <- clean_countries(WGI, path_to_country_dictionary)
WVS <- clean_countries(WVS, path_to_country_dictionary)
# --- 3. Merging Datasets Polity_Penn_Prio
# --- we start by merging polity to GTD:
# we do an left join, as we do not want countries that are not in the GTD (true? we could also set n_events to 0 for those?)
GTD_polity <- left_join(GTD, polity, by = c("consolidated_country", "year")) %>%
arrange(consolidated_country) # set order by country, for aesthetics and readability
# --- then we merge PENN to GTD_polity:
GTD_polity_PENN <- left_join(GTD_polity, PENN, by = c("consolidated_country", "year"))
# --- then we merge PRIO to GTD_polity_PENN:
GTD_polity_PENN_PRIO <- left_join(GTD_polity_PENN, PRIO, by = c("consolidated_country", "year"))
# because PRIO has only countries in wars, we need to complete the missing values with 0:
GTD_polity_PENN_PRIO <- GTD_polity_PENN_PRIO %>%
replace_na(list(type_of_conflict_1=0, type_of_conflict_2=0,
type_of_conflict_3=0, type_of_conflict_4=0, any_conflict=0))
# --- then we merge WGI to GTD_polity_PENN_PRIO:
GTD_polity_PENN_PRIO_WGI <- left_join(GTD_polity_PENN_PRIO, WGI, by = c("consolidated_country", "year"))
# --- then we merge WVS to GTD_polity_PENN_PRIO_WVS:
GTD_polity_PENN_PRIO_WGI_WVS <- left_join(GTD_polity_PENN_PRIO_WGI, WVS, by = c("consolidated_country"))
# some duplicate were created, because in some datasets, some year-country combinations happen twice
GTD_polity_PENN_PRIO_WGI <- GTD_polity_PENN_PRIO_WGI %>% distinct()
# take years after 2000: (quick dirty fix for the temporary countries):
GTD_polity_PENN_PRIO_WGI_WVS <- GTD_polity_PENN_PRIO_WGI_WVS %>%
filter(year > 1999)
View(GTD_polity_PENN_PRIO_WGI_WVS)
library(foreign)
GTD_polity_PENN_PRIO_WGI <- readRDS("../../Data/Data for Modelling/GTD_polity_PENN_PRIO_WGI_2000.rds")
write.dta(GTD_polity_PENN_PRIO_WGI,  file = "../../Data/Data for Modelling/GTD_polity_PENN_PRIO_WGI_2000.dta")
GTD_polity_PENN_PRIO_WGI_WVS <- readRDS("../../Data/Data for Modelling/GTD_polity_PENN_PRIO_WGI_WVS_2000.rds")
write.dta(GTD_polity_PENN_PRIO_WGI_WVS,  file = "../../Data/Data for Modelling/GTD_polity_PENN_PRIO_WGI_WVS_2000.dta")
